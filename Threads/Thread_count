package Com.Regnant.Threads;

import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;

public class LocksInThreading {

	private static int count = 0;
	private static Lock l = new ReentrantLock();

	public static void increment() {
		l.lock();
		try {
			for (int i = 0; i < 10000; i++)
				count++;
		} finally {
			l.unlock();
		}

	}

	public static void main(String[] args) {
		Thread t1 = new Thread(new Runnable() {

			@Override
			public void run() {
				increment();
			}

		});
		Thread t2 = new Thread(new Runnable() {

			@Override
			public void run() {
				increment();
			}

		});
		Thread t3 = new Thread(new Runnable() {

			@Override
			public void run() {
				increment();
			}

		});

		Thread t4 = new Thread(new Runnable() {

			@Override
			public void run() {
				increment();
			}

		});
		
		t1.start();
		t2.start();
		t3.start();
		t4.start();
		
		
		

		System.out.println("final count is : " + count);
	}

}
